import{A as l}from"./q-DSReGcQx.js";const g=l.BASE_URL;let o=null,a=null;const i=typeof window<"u",T=r=>{o=r,i&&localStorage.setItem("quillspace_token",r)},q=r=>{a=r,i&&localStorage.setItem("quillspace_tenant_id",r)},y=()=>o||(i?localStorage.getItem("quillspace_token"):null),h=()=>a||(i?localStorage.getItem("quillspace_tenant_id"):null),b=()=>{o=null,a=null,i&&(localStorage.removeItem("quillspace_token"),localStorage.removeItem("quillspace_tenant_id"))};class p{async request(e,n={}){const c=y(),d=h(),u={"Content-Type":"application/json",...n.headers};c&&(u.Authorization=`Bearer ${c}`),d&&(u["X-Tenant-ID"]=d);const s=await fetch(`${g}${e}`,{...n,headers:u});if(!s.ok)throw s.status===401?(b(),new Error("Authentication required")):new Error(`API Error: ${s.status} ${s.statusText}`);return s.json()}async login(e,n){return this.request("/auth/login",{method:"POST",body:JSON.stringify({email:e,password:n})})}async register(e){return this.request("/auth/register",{method:"POST",body:JSON.stringify(e)})}async getCurrentUser(){return this.request("/auth/me")}async getContent(){return this.request("/content")}async getContentById(e){return this.request(`/content/${e}`)}async createContent(e){return this.request("/content",{method:"POST",body:JSON.stringify(e)})}async updateContent(e,n){return this.request(`/content/${e}`,{method:"PUT",body:JSON.stringify(n)})}async deleteContent(e){return this.request(`/content/${e}`,{method:"DELETE"})}async publishContent(e){return this.request(`/content/${e}/publish`,{method:"POST"})}async getUsers(){return this.request("/users")}async getUserById(e){return this.request(`/users/${e}`)}async createUser(e){return this.request("/users",{method:"POST",body:JSON.stringify(e)})}async updateUser(e,n){return this.request(`/users/${e}`,{method:"PUT",body:JSON.stringify(n)})}async deleteUser(e){return this.request(`/users/${e}`,{method:"DELETE"})}async getAnalyticsMetrics(){return this.request("/analytics/metrics")}async recordEvent(e){return this.request("/analytics/events",{method:"POST",body:JSON.stringify(e)})}async getTopContent(){return this.request("/analytics/top-content")}async getRecentActivity(){return this.request("/analytics/recent-activity")}async getCurrentTenant(){return this.request("/tenants/current")}async updateTenantSettings(e){return this.request("/tenants/current/settings",{method:"PUT",body:JSON.stringify(e)})}}const t=new p,S={login:t.login.bind(t),register:t.register.bind(t),getCurrentUser:t.getCurrentUser.bind(t),getContent:t.getContent.bind(t),getContentById:t.getContentById.bind(t),createContent:t.createContent.bind(t),updateContent:t.updateContent.bind(t),deleteContent:t.deleteContent.bind(t),publishContent:t.publishContent.bind(t),getUsers:t.getUsers.bind(t),getUserById:t.getUserById.bind(t),createUser:t.createUser.bind(t),updateUser:t.updateUser.bind(t),deleteUser:t.deleteUser.bind(t),getAnalyticsMetrics:t.getAnalyticsMetrics.bind(t),recordEvent:t.recordEvent.bind(t),getTopContent:t.getTopContent.bind(t),getRecentActivity:t.getRecentActivity.bind(t),getCurrentTenant:t.getCurrentTenant.bind(t),updateTenantSettings:t.updateTenantSettings.bind(t)};export{S as a,q as b,b as c,y as g,T as s};
